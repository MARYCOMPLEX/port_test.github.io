{"version":3,"file":"static/js/327.abd45414.js","mappings":"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","sources":["webpack://as-web/./src/components/chart.vue","webpack://as-web/src/components/chart.vue","webpack://as-web/./src/components/chart.vue?b224","webpack://as-web/./src/components/chart.vue?81e5"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('Header'),_c('div',{ref:\"mainChart\",staticStyle:{\"width\":\"100%\",\"height\":\"670px\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n      <Header />\r\n      <div ref=\"mainChart\" style=\"width: 100%; height: 670px;\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as echarts from 'echarts';\r\n  import Header from '@/components/Header';\r\n  \r\n  export default {\r\n    name: 'OilTradeChart',\r\n    data() {\r\n      return {\r\n        chart: null,\r\n        timeLineData: [2017, 2018, 2019, 2020, 2021],\r\n        exportData: {\r\n          2017: [5071997, 1002237830, 26809332, 186347856, 182040411, 721259, 2552937, 94418766, 199303322, 256590594, 639810144, 54963456, 1081377322, 1679285577, 238099597, 299819755, 12023276, 33985995, 243701751, 22519673, 31886944, 114069730, 288079758, 308531221, 1251757936, 661842788],\r\n          2018: [6784683, 1897605000, 22455927, 157078097, 282001385, 556059, 4734399, 180956765, 265260889, 337652170, 529716989, 81402346, 1468585551, 1093713478, 787776675, 482303859, 11623579, 89200023, 375078819, 28908062, 39435218, 99044883, 228323072, 807897219, 1223042897, 1223872976],\r\n          2019: [5819198, 2555604396, 7727149, 197293475, 265403439, 91450, 11625129, 120407867, 256723039, 267646031, 728740892, 94978477, 749521936, 1411960893, 816018350, 714163603, 34643251, 56975387, 358267240, 21699655, 33798355, 164143316, 917184622, 813859682, 892105690, 1458485746],\r\n          2020: [8125177, 1491726055, 37899500, 63001269, 82684674, 160926, 2490661, 51034502, 71740702, 286860689, 325963095, 57655147, 648387149, 1428603585, 358140732, 477879904, 21557500, 71147875, 114029680, 16718685, 12003295, 100718789, 326892554, 357453961, 300493900, 641595454],\r\n          2021: [10561629, 1668249328, 49016317, 111535121, 128883208, 994255, 13841339, 15324664, 92392775, 351262877, 765501974, 46877343, 645622008, 1610904421, 356757025, 445217932, 150763785, 92163302, 137498473, 59927615, 20943354, 155033887, 264488785, 271037269, 483890862, 551924968]\r\n        },\r\n        importData: {\r\n          2017: [6784683, 1897605000, 22455927, 157078097, 282001385, 556059, 4734399, 180956765, 265260889, 337652170, 529716989, 81402346, 1468585551, 1093713478, 787776675, 482303859, 11623579, 89200023, 375078819, 28908062, 39435218, 99044883, 228323072, 807897219, 1223042897, 1223872976],\r\n          2018: [5819198, 2555604396, 7727149, 197293475, 265403439, 91450, 11625129, 120407867, 256723039, 267646031, 728740892, 94978477, 749521936, 1411960893, 816018350, 714163603, 34643251, 56975387, 358267240, 21699655, 33798355, 164143316, 917184622, 813859682, 892105690, 1458485746],\r\n          2019: [8125177, 1491726055, 37899500, 63001269, 82684674, 160926, 2490661, 51034502, 71740702, 286860689, 325963095, 57655147, 648387149, 1428603585, 358140732, 477879904, 21557500, 71147875, 114029680, 16718685, 12003295, 100718789, 326892554, 357453961, 300493900, 641595454],\r\n          2020: [10561629, 1668249328, 49016317, 111535121, 128883208, 994255, 13841339, 15324664, 92392775, 351262877, 765501974, 46877343, 645622008, 1610904421, 356757025, 445217932, 150763785, 92163302, 137498473, 59927615, 20943354, 155033887, 264488785, 271037269, 483890862, 551924968],\r\n          2021: [36362684, 8615422609, 143908225, 715255818, 941013117, 2523949, 35244465, 462142564, 885420727, 1500012361, 2989733094, 335876769, 4593493966, 7224467954, 2556792379, 2419385053, 230611391, 343472582, 1228575963, 149773690, 138067166, 633010605, 2024968791, 2558779352, 4151291285, 4537721932]\r\n        },\r\n        countries: ['阿根廷', '澳大利亚', '巴西', '加拿大', '中国澳门', '刚果', '埃及', '法国', '德国', '印度', '印度尼西亚', '意大利', '日本', '马来西亚', '墨西哥', '荷兰', '秘鲁', '葡萄牙', '俄罗斯', '西班牙', '瑞士', '中国台湾', '泰国', '英国', '美国', '越南']\r\n      };\r\n    },\r\n    components: {\r\n      Header\r\n    },\r\n    mounted() {\r\n      this.initChart();\r\n    },\r\n    methods: {\r\n      initChart() {\r\n        this.chart = echarts.init(this.$refs.mainChart);\r\n        const options = this.getOptions();\r\n        this.chart.setOption(options);\r\n      },\r\n      getOptions() {\r\n        let option = {\r\n          baseOption: {\r\n            backgroundColor: '#fff',\r\n            timeline: {\r\n              show: true,\r\n              axisType: 'category',\r\n              tooltip: {\r\n                show: true,\r\n                formatter: params => `${params.name}年数据统计`\r\n              },\r\n              autoPlay: true,\r\n              currentIndex: 0,\r\n              playInterval: 1000,\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  interval: 'auto',\r\n                  formatter: '{value}年',\r\n                },\r\n              },\r\n              data: this.timeLineData\r\n            },\r\n            title: {\r\n              text: '中国石油进出口统计',\r\n              textStyle: {\r\n                color: '#000',\r\n                fontSize: 16,\r\n              },\r\n              subtext: '数据来源：提供的Excel文件',\r\n            },\r\n            legend: {\r\n              data: ['石油出口', '石油进口'],\r\n              top: 4,\r\n              right: '20%',\r\n              textStyle: {\r\n                color: '#fff',\r\n              },\r\n            },\r\n            tooltip: {\r\n              show: true,\r\n              trigger: 'axis',\r\n              formatter: '{b}<br/>{a}: {c}美元',\r\n              axisPointer: {\r\n                type: 'shadow',\r\n              }\r\n            },\r\n            toolbox: {\r\n              right: 20,\r\n              feature: {\r\n                saveAsImage: {},\r\n                restore: {},\r\n                dataView: {},\r\n                dataZoom: {},\r\n                magicType: {\r\n                  type: ['line', 'bar']\r\n                },\r\n              }\r\n            },\r\n            grid: [{\r\n              show: false,\r\n              left: '4%',\r\n              top: 60,\r\n              bottom: 60,\r\n              containLabel: true,\r\n              width: '46%',\r\n            }, {\r\n              show: false,\r\n              left: '50.5%',\r\n              top: 80,\r\n              bottom: 60,\r\n              width: '0%',\r\n            }, {\r\n              show: false,\r\n              right: '4%',\r\n              top: 60,\r\n              bottom: 60,\r\n              containLabel: true,\r\n              width: '46%',\r\n            }],\r\n            xAxis: [\r\n              {\r\n                type: 'value',\r\n                inverse: true,\r\n                axisLine: {\r\n                  show: false,\r\n                },\r\n                axisTick: {\r\n                  show: false,\r\n                },\r\n                position: 'top',\r\n                axisLabel: {\r\n                  show: true,\r\n                  textStyle: {\r\n                    color: '#B2B2B2',\r\n                    fontSize: 12,\r\n                  },\r\n                },\r\n                splitLine: {\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: '#1F2022',\r\n                    width: 1,\r\n                    type: 'solid',\r\n                  },\r\n                },\r\n              },\r\n              {\r\n                gridIndex: 1,\r\n                show: false,\r\n              },\r\n              {\r\n                gridIndex: 2,\r\n                type: 'value',\r\n                axisLine: {\r\n                  show: false,\r\n                },\r\n                axisTick: {\r\n                  show: false,\r\n                },\r\n                position: 'top',\r\n                axisLabel: {\r\n                  show: true,\r\n                  textStyle: {\r\n                    color: '#B2B2B2',\r\n                    fontSize: 12,\r\n                  },\r\n                },\r\n                splitLine: {\r\n                  show: true,\r\n                  lineStyle: {\r\n                    color: '#1F2022',\r\n                    width: 1,\r\n                    type: 'solid',\r\n                  },\r\n                },\r\n              }\r\n            ],\r\n            yAxis: [\r\n              {\r\n                type: 'category',\r\n                inverse: true,\r\n                position: 'right',\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                axisTick: {\r\n                  show: false\r\n                },\r\n                axisLabel: {\r\n                  show: false,\r\n                  margin: 8,\r\n                  textStyle: {\r\n                    color: '#9D9EA0',\r\n                    fontSize: 12,\r\n                  },\r\n                },\r\n                data: this.countries,\r\n              },\r\n              {\r\n                gridIndex: 1,\r\n                type: 'category',\r\n                inverse: true,\r\n                position: 'left',\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                axisTick: {\r\n                  show: false\r\n                },\r\n                axisLabel: {\r\n                  show: true,\r\n                  textStyle: {\r\n                    color: '#9D9EA0',\r\n                    fontSize: 12,\r\n                  },\r\n                },\r\n                data: this.countries.map(value => ({\r\n                  value: value,\r\n                  textStyle: {\r\n                    align: 'center',\r\n                  }\r\n                })),\r\n              },\r\n              {\r\n                gridIndex: 2,\r\n                type: 'category',\r\n                inverse: true,\r\n                position: 'left',\r\n                axisLine: {\r\n                  show: false\r\n                },\r\n                axisTick: {\r\n                  show: false\r\n                },\r\n                axisLabel: {\r\n                  show: false,\r\n                  textStyle: {\r\n                    color: '#9D9EA0',\r\n                    fontSize: 12,\r\n                  },\r\n                },\r\n                data: this.countries,\r\n              }\r\n            ],\r\n            series: []\r\n          },\r\n          options: []\r\n        };\r\n  \r\n        for (let i = 0; i < this.timeLineData.length; i++) {\r\n          let year = this.timeLineData[i];\r\n          option.options.push({\r\n            title: {\r\n              text: '中国石油' + year + '年进出口统计',\r\n            },\r\n            series: [\r\n              {\r\n                name: '石油出口',\r\n                type: 'bar',\r\n                barGap: 20,\r\n                barWidth: 20,\r\n                label: {\r\n                  normal: {\r\n                    show: false,\r\n                  },\r\n                  emphasis: {\r\n                    show: true,\r\n                    position: 'left',\r\n                    offset: [0, 0],\r\n                    textStyle: {\r\n                      color: '#fff',\r\n                      fontSize: 14,\r\n                    },\r\n                  },\r\n                },\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: '#659F83',\r\n                  },\r\n                  emphasis: {\r\n                    color: '#08C7AE',\r\n                  },\r\n                },\r\n                data: this.exportData[year],\r\n              },\r\n              {\r\n                name: '石油进口',\r\n                type: 'bar',\r\n                barGap: 20,\r\n                barWidth: 20,\r\n                xAxisIndex: 2,\r\n                yAxisIndex: 2,\r\n                label: {\r\n                  normal: {\r\n                    show: false,\r\n                  },\r\n                  emphasis: {\r\n                    show: true,\r\n                    position: 'right',\r\n                    offset: [0, 0],\r\n                    textStyle: {\r\n                      color: '#fff',\r\n                      fontSize: 14,\r\n                    },\r\n                  },\r\n                },\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: '#F68989',\r\n                  },\r\n                  emphasis: {\r\n                    color: '#F94646',\r\n                  },\r\n                },\r\n                data: this.importData[year],\r\n              }\r\n            ]\r\n          });\r\n        }\r\n  \r\n        return option;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 样式可以根据需求进行调整 */\r\n  </style>\r\n  ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chart.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./chart.vue?vue&type=template&id=233c2ef9&scoped=true\"\nimport script from \"./chart.vue?vue&type=script&lang=js\"\nexport * from \"./chart.vue?vue&type=script&lang=js\"\nimport style0 from \"./chart.vue?vue&type=style&index=0&id=233c2ef9&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"233c2ef9\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","staticStyle","staticRenderFns","name","data","chart","timeLineData","exportData","importData","countries","components","Header","mounted","initChart","methods","echarts","$refs","mainChart","options","getOptions","setOption","option","baseOption","backgroundColor","timeline","show","axisType","tooltip","formatter","params","autoPlay","currentIndex","playInterval","label","normal","interval","title","text","textStyle","color","fontSize","subtext","legend","top","right","trigger","axisPointer","type","toolbox","feature","saveAsImage","restore","dataView","dataZoom","magicType","grid","left","bottom","containLabel","width","xAxis","inverse","axisLine","axisTick","position","axisLabel","splitLine","lineStyle","gridIndex","yAxis","margin","map","value","align","series","i","length","year","push","barGap","barWidth","emphasis","offset","itemStyle","xAxisIndex","yAxisIndex","component"],"sourceRoot":""}